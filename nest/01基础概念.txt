1.url解析---
	url路由在@controller()中声明
		例如/user/list:
			@controller('user')
	url中的参数通过@param
		例如/user/111:
			@Get(':id')
			xxx(@param('id')) {}
		query参数用@Query参数来取
			例如/user/xx?id=1
			@Get('xxx')
			xxx(@Query('id')){}
	@Body获取请求体内容

2.service用来操作数据库

3.nest每个模块都包含controller和service
4.通过@module声明模块
5.@module包含contollers和providers
6.nest依赖注入机制(IOC inverse of control反转控制)
	-只需要声明依赖, 不必手动new依赖??
7.每个模块包含
	controller: 处理路由, 解析请求参数
	service: 处理业务逻辑
	dto: 封装请求参数
	entities: 封装对应数据库表实体
8.MVC模式
	controller接收请求参数
	交给model处理业务逻辑
	返回view(响应)
9.注解(原)
controller：控制器，用于处理路由，解析请求参数

handler：控制器里处理路由的方法

service：实现业务逻辑的地方，比如操作数据库等

dto：data transfer object，数据传输对象，用于封装请求体里数据的对象

module：模块，包含 controller、service 等，比如用户模块、书籍模块

entity：对应数据库表的实体

ioc：Inverse of Controller，反转控制或者叫依赖注入，只要声明依赖，运行时 Nest 会自动注入依赖的实例

aop：Aspect Oriented Programming 面向切面编程，在多个请求响应流程中可以复用的逻辑，比如日志记录等，具体包含 middleware、interceotor、guard、exception filter、pipe

nest cli：创建项目、创建模块、创建 controller、创建 service 等都可以用这个 cli 工具来做
